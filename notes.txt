Consensus
- validators
    - nodes with signgiciat amount of crypto are validators
    - responsible for vlaidaitng transactions
    - can be proposer
- Proposer
    - validator is chosen to propose a block
    - liklihood of being chosen to validate block proportional to stake in network
- Slashing
    - any nodes found to be acting maliciously have their stake slashed
    - mainly for validators (significant stake holders that influence network)
- Rewards
    - validators are rewared for partiicaption -> get rewarded transaction fees
    - rewards distributed proportional to stake




NEXT STEPS
- code review (config, consensus, node, top)
- genesis block
- triggers (new tx, new block, dump stores, mempool, caches ...)
- testing
- might be useful to exchange public keys in handshake, refactor peer cache, other caches

Testing
- bash script takes in number of nodes
- spins up n nodes - gives each node the index and the number of validators
    - each node takes index and derives address, peers, db path, validators, and reads in own keys
- runs controller - controller generates and sends config
- triggers behavior
- runs tests
- cleans up log files/db files if passes, otherwise leaves them

Caches
- transaction cache is good
- block ccahce refactor to match transactgion cache'
- maybe add more to peer cache



Design Decisions
- validator node will broadcast commits/votes to whole network
- validators only broadcast positive pre-vote/pre-commit messages